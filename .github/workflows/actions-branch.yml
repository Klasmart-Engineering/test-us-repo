name: CI Pipeline for Branches

env:
  ARGOCD_APP: uk-landingzone-user-service
  ARGOCD_APP_CHART_TAG_PATH: userService.tag

on:
  push:
    branches:
      - "**"
    tags:
      - "v*"
  pull_request:
    branches-ignore:
      - "**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: kidsloop
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
      - name: "Install NPM dependencies"
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_PAT }}
      - name: Generate SVG Diagrams
        uses: holowinski/plantuml-github-action@main
        with:
          args: -v -tsvg documents/*.plantuml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Local Changes
        uses: stefanzweifel/git-auto-commit-action@v4.1.2
        with:
          commit_message: "feat(AD-2039): png files for plantuml diagrams"
          branch: ${{ github.github_ref_name }}
      - name: "Static checks"
        if: github.ref == 'refs/heads/main'
        run: |
          npm run prettier-check
          npm run lint
          npm run commitlint-check -- --from=HEAD
      - name: "Unit tests"
        run: npm run coverage:unit
      - name: Upload unit test coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage_unit/
          fail_ci_if_error: true
          files: ./coverage_unit/lcov.info
          flags: unittests
          name: codecov-umbrella
          verbose: true
      - name: "Migration tests"
        run: npm run coverage:migrations
      - name: Upload migration test coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage_migrations/
          fail_ci_if_error: true
          files: ./coverage_migrations/lcov.info
          flags: migrationtests
          name: codecov-umbrella
          verbose: true
      - name: "Integration tests"
        run: npm run coverage:integration
      - name: Upload integration test coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage_integration/
          fail_ci_if_error: true
          files: ./coverage_integration/lcov.info
          flags: integrationtests
          name: codecov-umbrella
          verbose: true
      - name: "Acceptance tests"
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      
          ids=$(docker ps -a -q)
          for id in $ids
          do
            echo "$id"
            docker stop $id && docker rm $id
          done
      
          npm run build
          npx nyc instrument ./dist --in-place
          docker-compose up -d && sleep 20
          docker-compose ps
          npm run test:acceptance
      
          docker stop -t 2 user-service
          npx nyc report --require ts-node/register --reporter=lcov --reporter=json-summary --reporter=text-summary --report-dir ./coverage_acceptance
      - name: Upload acceptance test coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage_acceptance/
          fail_ci_if_error: true
          files: ./coverage_acceptance/lcov.info
          flags: acceptancetests
          name: codecov-umbrella
          verbose: true
