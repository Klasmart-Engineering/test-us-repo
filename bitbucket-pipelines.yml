# This is a sample build configuration for JavaScript.
# Check our guides at https://confluence.atlassian.com/x/14UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: node:14
definitions:
  services:
    postgres:
      image: postgres
      environment:
        POSTGRES_DB: testdb
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres

pipelines:
  pull-requests:
    '**': # This runs as default for any branch not elsewhere defined.
    - step:
        name: "Unit and integration tests"
        services:
          - postgres
        caches:
          - node
        script:
           - npm install
           - npm run prettier-check
           - npm run lint
           - npm test
    - step:
        name: "Acceptance tests"
        services:
          - docker
        caches:
          - node
        script:
          - curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          - chmod +x /usr/local/bin/docker-compose
          - npm install
          - docker-compose up -d && sleep 20
          - npm run test:acceptance
    - step:
        name: "Build and publish docker image"
        services:
          - docker
        caches:
          - pip
        image: python:3.9-alpine
        script:
          # auth to AWS ECR
          - pip3 install -U awscli
          - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL

          # define vars
          - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
          - export REPO=$DOCKER_REPO_URL/kidsloop-user
          - export COMMIT_TAG=$(echo $BITBUCKET_COMMIT | cut -c1-7)
          - if test -z "$BRANCH_TAG"; then export TAG=commit; else export TAG=$BRANCH_TAG;fi

          # build image
          - docker build -t kidsloop-user .

          # tag image
          - docker tag kidsloop-user:latest $REPO:$TAG
          - docker tag kidsloop-user:latest $REPO:$TAG-$COMMIT_TAG

          # push images
          - if test -n "$BRANCH_TAG"; then docker push $REPO:$TAG; fi
          - docker push $REPO:$TAG-$COMMIT_TAG

  branches:
    feature/DEV-8-add-instrumentation-scripts-to-bit:
      - step:
          name: "Call NewRelic to register a deployment attempt"
          caches:
            - pip
          image: python:3.9-alpine
          script:
            # auth to AWS
            - pip3 install -U awscli
            - export NEWRELIC_APP_ID=$(aws ssm get-parameter --name /newrelic/basic/app-id --query Parameter.Value --output text --region eu-west-2)
            - export NEWRELIC_API_KEY=$(aws ssm get-parameter --name /newrelic/basic/api-key --query Parameter.Value --output text --region eu-west-2)
            - pwd
            - ls scripts/
            # - scripts/monitor_deployment.sh
    master:
      - step:
          name: "Unit and integration tests"
          services:
            - postgres
          caches:
            - node
          script:
            - npm install
            - npm run prettier-check
            - npm run lint
            - npm test
      - step:
          name: "Acceptance tests"
          services:
            - docker
          caches:
            - node
          script:
            - curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            - chmod +x /usr/local/bin/docker-compose
            - npm install
            - docker-compose up -d && sleep 20
            - npm run test:acceptance
      - step:
          name: "Build and publish docker image"
          services:
            - docker
          caches:
            - pip
          image: python:3.9-alpine
          script:
            # auth to AWS ECR
            - pip3 install -U awscli
            - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL

            # define vars
            - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
            - export REPO=$DOCKER_REPO_URL/kidsloop-user
            - export COMMIT_TAG=$(echo $BITBUCKET_COMMIT | cut -c1-7)
            - if test -z "$BRANCH_TAG"; then export TAG=commit; else export TAG=$BRANCH_TAG;fi

            # build image
            - docker build -t kidsloop-user .

            # tag image
            - docker tag kidsloop-user:latest $REPO:$TAG
            - docker tag kidsloop-user:latest $REPO:$TAG-latest
            - docker tag kidsloop-user:latest $REPO:$TAG-$BITBUCKET_BUILD_NUMBER
            - docker tag kidsloop-user:latest $REPO:$TAG-$COMMIT_TAG

            # push images
            - if test -n "$BRANCH_TAG"; then docker push $REPO:$TAG; fi
            - if test -n "$BRANCH_TAG"; then docker push $REPO:$TAG-latest; fi
            - docker push $REPO:$TAG-$BITBUCKET_BUILD_NUMBER
            - docker push $REPO:$TAG-$COMMIT_TAG
      - step:
          name: "Deploy"
          script:
            - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
            - export COMMIT_TAG=$(echo $BITBUCKET_COMMIT | cut -c1-7)
            - if test -z "$BRANCH_TAG"; then export TAG=commit; else export TAG=$BRANCH_TAG;fi
            - echo "TAG - ${TAG}"
            - echo "COMMIT_TAG - ${COMMIT_TAG}"
            - echo "IMAGE_TAG - $TAG-$COMMIT_TAG"
            - |
                curl --request POST \
                --url https://circleci.com/api/v2/project/bitbucket/calmisland/kidsloop-user-service/pipeline \
                --header "Circle-Token: $CIRCLECI_TOKEN" \
                --header "content-type: application/json" \
                --data "{\"branch\":\"$BITBUCKET_BRANCH\",\"parameters\":{\"image-tag\":\"$TAG-$COMMIT_TAG\"}}"
