image: node:lts
definitions:
  services:
    postgres:
      image: postgres
      environment:
        POSTGRES_DB: testdb
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
  steps:
      - step: &dependencies
          name: "Install NPM dependencies"
          caches:
            - node
          script:
            - npm ci
          artifacts:
            - node_modules/**
      - step: &checks
          name: "static checks"
          caches:
            - node
          script:
            - npm run prettier-check
            - npm run lint
            - if test $BITBUCKET_BRANCH -eq "master";  then npm run commitlint-check -- --from=HEAD~1; else npm run commitlint-check -- --from=origin/master; fi
      - step: &unit
          name: "Unit tests"
          services:
            - postgres
          caches:
            - node
          script:
            - npm run coverage:unit
          artifacts:
            - coverage_unit/**
      - step: &migration
          name: "Migration tests"
          services:
            - postgres
          caches:
            - node
          script:
            - npm run coverage:migrations
          artifacts:
            - coverage_migrations/**
      - step: &integration
          name: "Integration tests"
          services:
            - postgres
          caches:
            - node
          script:
            - npm run coverage:integration
          artifacts:
            - coverage_integration/**
      - step: &acceptance
          name: "Acceptance tests"
          services:
            - docker
          caches:
            - node
          script:
            - curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            - chmod +x /usr/local/bin/docker-compose
            - npm run build
            - npx nyc instrument ./dist --in-place
            - docker-compose up -d && sleep 20
            - docker-compose ps
            - npm run test:acceptance
            # to get code coverage we need to tell the container when our tests
            # have finshed running - do that using SIGTERM
            # you can't override handling of SIGKILL in node
            # https://nodejs.org/api/process.html#process_signal_events
            # so set a timeout thats high enough for our SIGTERM handling to
            # finish before SIGKILL is sent
            - docker stop -t 2 user-service
            - npx nyc report --require ts-node/register --reporter=lcov --reporter=json-summary --reporter=text-summary --report-dir ./coverage_acceptance
          artifacts:
            - coverage_acceptance/**
      - step: &docker
          name: "Build and publish docker image"
          services:
            - docker
          caches:
            - pip
          image: python:3.9-alpine
          script:
            # auth to AWS ECR
            - pip3 install -U awscli
            - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL

            # define vars
            - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
            - export REPO=$DOCKER_REPO_URL/kidsloop-user
            - export COMMIT_TAG=$(echo $BITBUCKET_COMMIT | cut -c1-7)
            - echo "$BITBUCKET_TAG"
            - if test -n "$BITBUCKET_TAG"; then export TAG=$BITBUCKET_TAG; else export TAG=$BRANCH_TAG;fi

            # build image
            - docker build -t kidsloop-user .

            # tag image
            - docker tag kidsloop-user:latest $REPO:$TAG
            - docker tag kidsloop-user:latest $REPO:$TAG-$COMMIT_TAG

            # push images
            - docker push $REPO:$TAG
            - docker push $REPO:$TAG-$COMMIT_TAG

pipelines:
  default:
    - step: *dependencies
    - step: *unit
    - step: *migration
    - step: *integration
    - step: *acceptance

  pull-requests:
    '**': # This runs as default for any branch not elsewhere defined.
    - step: *dependencies
    - step: *checks
    - step:
        name: "Check PR title format"
        caches:
          - node
        script:
           - npm install
           - node scripts/check_pr_title.js
    - step: *docker

  tags:
      v*:
        - step: *dependencies
        - step: *unit
        - step: *migration
        - step: *integration
        - step: *acceptance
        - step: *docker
  branches:
    master:
      - step: *dependencies
      - step: *checks
      - step: *unit
      - step: *migration
      - step: *integration
      - step: *acceptance
      - step: *docker
      - step:
          name: "Deploy"
          script:
            - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
            - export COMMIT_TAG=$(echo $BITBUCKET_COMMIT | cut -c1-7)
            - if test -z "$BRANCH_TAG"; then export TAG=commit; else export TAG=$BRANCH_TAG;fi
            - echo "TAG - ${TAG}"
            - echo "COMMIT_TAG - ${COMMIT_TAG}"
            - echo "IMAGE_TAG - $TAG-$COMMIT_TAG"
            - |
                curl --request POST \
                --url https://circleci.com/api/v2/project/bitbucket/calmisland/kidsloop-user-service/pipeline \
                --header "Circle-Token: $CIRCLECI_TOKEN" \
                --header "content-type: application/json" \
                --data "{\"branch\":\"$BITBUCKET_BRANCH\",\"parameters\":{\"image-tag\":\"$TAG-$COMMIT_TAG\"}}"
